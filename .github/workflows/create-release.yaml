name: Create Release Workflow

env:
  GH_TOKEN: ${{ github.token }}

on:
  pull_request:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Determine BUMP_TYPE
        id: determine_bump_type
        run: |
          # List changed files in the pull request
          CHANGED_FILES=$(gh pr list --json --base=master -q ".[] | select(.number == $GITHUB_PR_NUMBER) | .files[].filename")

          # Search for changeset files in the list of changed files
          CHG_FILE=$(echo "$CHANGED_FILES" | grep -E "\.md$" | head -n 1)

          if [ -n "$CHG_FILE" ]; then
            BUMP_TYPE=$(grep -oP "'semantic-styles': (major|minor|patch)" "$CHG_FILE" | cut -d "'" -f 4)
          else
            echo "::error::No changeset file found."
            exit 1
          fi
          echo "BUMP_TYPE=$BUMP_TYPE" >> $GITHUB_ENV

      - name: Update Package Version
        if: steps.determine_bump_type.outputs.BUMP_TYPE
        run: |
          BUMP_TYPE="${{ steps.determine_bump_type.outputs.BUMP_TYPE }}"
          case $BUMP_TYPE in
            major)
              npm run changeset:major
              ;;
            minor)
              npm run changeset:minor
              ;;
            patch)
              npm run changeset:patch
              ;;
            *)
              echo "::error::Invalid BUMP_TYPE: $BUMP_TYPE"
              exit 1
              ;;
          esac

      - name: Get Package Version
        id: get_version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV

      - name: Create Release PR
        if: steps.get_version.outputs.PACKAGE_VERSION
        run: |
          PACKAGE_VERSION="${{ steps.get_version.outputs.PACKAGE_VERSION }}"
          RELEASE_BRANCH="release/$PACKAGE_VERSION"
          git checkout -b "$RELEASE_BRANCH"
          git commit -am "Release $PACKAGE_VERSION"
          git push origin "$RELEASE_BRANCH"
          echo "::set-output name=release_branch::$RELEASE_BRANCH"
